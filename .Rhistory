data <- read.csv2("activity.zip",header = TRUE, sep = ",")
unzip("activity.zip")
activity <- read.csv("activity.csv")
data <- read.csv2("activity.zip",header = TRUE, sep = ",")
unzip("activity.zip")
data <- read.csv("activity.csv")
table(data$steps ~ data$date)
table(data$date ~ data$steps)
data <- data[,!is.na(data$steps)]
data <- data[,is.na(data$steps)]
data <- data[is.na(data$steps)]
data <- data[[is.na(data$steps)]]
na.omit(data)
data <- na.omit(data)
table(data$date ~ data$steps)
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
View(stepsByDate)
barplot(stepsByDate)
barplot(height = stepsByDate$steps)
barplot(height = stepsByDate$steps, width = stepsByDate$date)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xalb="Date", ylab="Number of steps", )
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xalb="Date", ylab="Number of steps" )
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xalb="Date", ylab="Steps" )
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
View(stepsByDate)
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
View(data)
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
View(stepsByInterval)
stepsByInterval[which.max(stepsByInterval$steps)]
stepsByInterval[,which.max(stepsByInterval$steps)]
stepsByInterval$interval[which.max(stepsByInterval$steps)]
intervalMaxSteps=stepsByInterval$interval[which.max(stepsByInterval$steps)]
library(knitr)
#Load data
unzip("activity.zip")
data <- read.csv("activity.csv")
#Remove lines with NAs
#data <- na.omit(data)
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
#Aggregate mean steps by interval and draw the corresponding plot
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
#Calculate the interval where the mean of steps is max
intervalMaxSteps=stepsByInterval$interval[which.max(stepsByInterval$steps)]
nbOfMissingValues <- sum(is.na(data))
test <- data
test$steps[is.na(test$steps)]
dataBis <- merge(x = data, y=stepsByInterval, by="interval")
View(dataBis)
dataBis$steps.x[is.na(dataBis$steps.x)] <- dataBis$steps.y
dataBis$steps.x[is.na(dataBis$steps.x)] <- dataBis$steps.y[is.na(dataBis$steps.x)]
View(dataBis)
dataBis <- dataBis[,c(1:3)]
library(knitr)
#Load data
unzip("activity.zip")
data <- read.csv("activity.csv")
#Remove lines with NAs
#data <- na.omit(data)
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
#Aggregate mean steps by interval and draw the corresponding plot
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
#Calculate the interval where the mean of steps is max
intervalMaxSteps <- stepsByInterval$interval[which.max(stepsByInterval$steps)]
#Number of missing values
nbOfMissingValues <- sum(is.na(data))
#Fill NA values with mean values interval
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("","y"))
dataBis$steps.x[is.na(dataBis$steps)] <- dataBis$steps.y[is.na(dataBis$steps)]
dataBis <- dataBis[,c(1:3)]
View(dataBis)
#Fill NA values with mean values interval
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("","y"))
dataBis$steps[is.na(dataBis$steps)] <- dataBis$steps.y[is.na(dataBis$steps)]
dataBis <- dataBis[,c(1:3)]
library(knitr)
#Load data
unzip("activity.zip")
data <- read.csv("activity.csv")
#Remove lines with NAs
#data <- na.omit(data)
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
#Aggregate mean steps by interval and draw the corresponding plot
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
#Calculate the interval where the mean of steps is max
intervalMaxSteps <- stepsByInterval$interval[which.max(stepsByInterval$steps)]
#Number of missing values
nbOfMissingValues <- sum(is.na(data))
#Fill NA values with mean values interval
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("","y"))
dataBis$steps[is.na(dataBis$steps)] <- dataBis$steps.y[is.na(dataBis$steps)]
dataBis <- dataBis[,c(1:3)]
library(knitr)
#Load data
unzip("activity.zip")
data <- read.csv("activity.csv")
#Remove lines with NAs
#data <- na.omit(data)
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
#Aggregate mean steps by interval and draw the corresponding plot
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
#Calculate the interval where the mean of steps is max
intervalMaxSteps <- stepsByInterval$interval[which.max(stepsByInterval$steps)]
#Number of missing values
nbOfMissingValues <- sum(is.na(data))
#Fill NA values with mean values interval
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("","y"))
dataBis$steps[is.na(dataBis$steps)] <- dataBis$steps.y[is.na(dataBis$steps)]
dataBis <- dataBis[,c(1:3)]
library(knitr)
#Load data
unzip("activity.zip")
data <- read.csv("activity.csv")
#Remove lines with NAs
#data <- na.omit(data)
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
#Aggregate mean steps by interval and draw the corresponding plot
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
#Calculate the interval where the mean of steps is max
intervalMaxSteps <- stepsByInterval$interval[which.max(stepsByInterval$steps)]
#Number of missing values
nbOfMissingValues <- sum(is.na(data))
#Fill NA values with mean values interval
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("","y"))
is.na(dataBis$steps)
dataBis$steps[is.na(dataBis$steps)] <- dataBis$steps.y[is.na(dataBis$steps)]
dataBis <- dataBis[,c(1:3)]
library(knitr)
#Load data
unzip("activity.zip")
data <- read.csv("activity.csv")
#Remove lines with NAs
#data <- na.omit(data)
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
#Aggregate mean steps by interval and draw the corresponding plot
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
#Calculate the interval where the mean of steps is max
intervalMaxSteps <- stepsByInterval$interval[which.max(stepsByInterval$steps)]
#Number of missing values
nbOfMissingValues <- sum(is.na(data))
#Fill NA values with mean values interval
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("","y"))
sum(is.na(dataBis$steps))
dataBis$steps[is.na(dataBis$steps)] <- dataBis$steps.y[is.na(dataBis$steps)]
dataBis <- dataBis[,c(1:3)]
library(knitr)
#Load data
unzip("activity.zip")
data <- read.csv("activity.csv")
#Remove lines with NAs
#data <- na.omit(data)
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
#Aggregate mean steps by interval and draw the corresponding plot
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
#Calculate the interval where the mean of steps is max
intervalMaxSteps <- stepsByInterval$interval[which.max(stepsByInterval$steps)]
#Number of missing values
nbOfMissingValues <- sum(is.na(data))
#Fill NA values with mean values interval
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("","y"))
nas <- is.na(dataBis$steps)
dataBis$steps[nas] <- dataBis$steps.y[nas]
dataBis <- dataBis[,c(1:3)]
View(dataBis)
library(knitr)
#Load data
unzip("activity.zip")
data <- read.csv("activity.csv")
#Remove lines with NAs
#data <- na.omit(data)
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
#Aggregate mean steps by interval and draw the corresponding plot
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
#Calculate the interval where the mean of steps is max
intervalMaxSteps <- stepsByInterval$interval[which.max(stepsByInterval$steps)]
#Number of missing values
nbOfMissingValues <- sum(is.na(data))
#Fill NA values with mean values interval
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("","y"))
nas <- is.na(dataBis$steps)
dataBis$steps[nas] <- dataBis$steps.y[nas]
#dataBis <- dataBis[,c(1:3)]
View(dataBis)
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("",".y"))
nas <- is.na(dataBis$steps)
dataBis$steps[nas] <- dataBis$steps.y[nas]
dataBis <- dataBis[,c(1:3)]
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDateBis <- aggregate(steps ~ date, data = dataBis, FUN = sum)
barplot(height = stepsByDateBis$steps, names.arg = stepsByDateBis$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDateBis <- mean(stepsByDateBis$steps)
medianStepsByDateBis <- median(stepsByDateBis$steps)
View(stepsByDateBis)
View(stepsByInterval)
View(stepsByDateBis)
View(stepsByInterval)
weekdays(data$date)
weekdays(as.Date(data$date))
weekdays <- data[as.Date(data$date) %notin% c("Samedi", "Dimanche")]
weekdays <- data[!(as.Date(data$date) %notin% c("Samedi", "Dimanche"))]
weekdays <- data[!(as.Date(data$date) %in% c("Samedi", "Dimanche"))]
weekdays <- data[,!(as.Date(data$date) %in% c("Samedi", "Dimanche"))]
weekdays <- data[[!(as.Date(data$date) %in% c("Samedi", "Dimanche"))]]
dataBis$daytype <- as.factor(sapply(dataBis$date, daytype))
daytype <- function(date) {
if (weekdays(as.Date(date)) %in% c("Samedi", "Dimanche")) {
"weekend"
} else {
"weekday"
}
}
#Calculate the interval where the mean of steps is max
dataBis$daytype <- as.factor(sapply(dataBis$date, daytype))
View(dataBis)
stepsByIntervalWeekday <- aggregate(steps ~ interval, data=dataBis, subset = dataBis$daytype == "weekday", FUN = mean)
View(stepsByIntervalWeekday)
plot(stepsByIntervalWeekday)
plot(stepsByIntervalWeekday, type="l")
stepsByIntervalWeekend <- aggregate(steps ~ interval, data=dataBis, subset = dataBis$daytype == "weekend", FUN = mean)
plot(stepsByIntervalWeekend, type="l")
plot(stepsByIntervalWeekday, type="l",title="Weekday")
plot(stepsByIntervalWeekday, type="l",main="Weekday")
plot(stepsByIntervalWeekend, type="l", main="Weekend")
par(mfrow = c(2, 1))
plot(stepsByIntervalWeekday, type="l",main="Weekday")
plot(stepsByIntervalWeekend, type="l", main="Weekend")
library(knitr)
knit('knitr-minimal.Rhtml')
knit('PA1_template.Rmd')
daytype <- function(date) {
if (weekdays(as.Date(date)) %in% c("Samedi", "Dimanche")) {
"weekend"
} else {
"weekday"
}
}
#Load data
unzip("activity.zip")
data <- read.csv("activity.csv")
#Remove lines with NAs
#data <- na.omit(data)
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDate <- aggregate(steps ~ date, data = data, FUN = sum)
barplot(height = stepsByDate$steps, names.arg = stepsByDate$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDate <- mean(stepsByDate$steps)
medianStepsByDate <- median(stepsByDate$steps)
#Aggregate mean steps by interval and draw the corresponding plot
stepsByInterval <- aggregate(steps ~ interval, data = data, FUN = mean)
plot(stepsByInterval, type="l")
#Calculate the interval where the mean of steps is max
intervalMaxSteps <- stepsByInterval$interval[which.max(stepsByInterval$steps)]
#Number of missing values
nbOfMissingValues <- sum(is.na(data))
#Fill NA values with mean values interval
dataBis <- merge(x = data, y=stepsByInterval, by="interval", suffixes=c("",".y"))
nas <- is.na(dataBis$steps)
dataBis$steps[nas] <- dataBis$steps.y[nas]
dataBis <- dataBis[,c(1:3)]
#Aggregate steps by date and draw the corresponding bar-plot
stepsByDateBis <- aggregate(steps ~ date, data = dataBis, FUN = sum)
barplot(height = stepsByDateBis$steps, names.arg = stepsByDateBis$date, xlab="Date", ylab="Steps" )
#Calculate mean and median of the daily number of steps
meanStepsByDateBis <- mean(stepsByDateBis$steps)
medianStepsByDateBis <- median(stepsByDateBis$steps)
#Add type of the day
dataBis$daytype <- as.factor(sapply(dataBis$date, daytype))
#Aggregate mean steps by interval from week days
stepsByIntervalWeekday <- aggregate(steps ~ interval, data=dataBis, subset = dataBis$daytype == "weekday", FUN = mean)
#Aggregate mean steps by interval from weekend days
stepsByIntervalWeekend <- aggregate(steps ~ interval, data=dataBis, subset = dataBis$daytype == "weekend", FUN = mean)
par(mfrow = c(2, 1))
plot(stepsByIntervalWeekday, type="l",main="Weekday")
plot(stepsByIntervalWeekend, type="l", main="Weekend")
knitr::opts_chunk$set(fig.path='figures/')
fig_path( options = list(fig.path = "figure/"))
